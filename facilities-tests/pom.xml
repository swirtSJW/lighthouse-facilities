<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>gov.va.api.health</groupId>
    <artifactId>test-starter</artifactId>
    <version>8.0.21</version>
    <relativePath/>
  </parent>
  <groupId>gov.va.api.lighthouse</groupId>
  <artifactId>facilities-tests</artifactId>
  <version>3.0.8-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <docker.imageName>lighthouse-${project.artifactId}</docker.imageName>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.health</groupId>
      <artifactId>sentinel</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>facilities-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>facilities-local-db</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>facilities-mock-services</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>gov.va.api.lighthouse</groupId>
      <artifactId>facilities</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <!--
    Launch process for services
  -->
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-applications</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <includeArtifactIds>junit-platform-console-standalone,h2,facilities-mock-services,facilities,facilities-local-db</includeArtifactIds>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.bazaarvoice.maven.plugins</groupId>
        <artifactId>process-exec-maven-plugin</artifactId>
        <version>${process-exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>mock-services-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>mock-services</name>
              <healthcheckUrl>http://localhost:8666/help</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <processLogFile>${project.build.directory}/mock-services.log</processLogFile>
              <waitForInterrupt>false</waitForInterrupt>
              <waitAfterLaunch>60</waitAfterLaunch>
              <arguments>
                <argument>java</argument>
                <argument>-jar</argument>
                <argument>facilities-mock-services.jar</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>facilities-process</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <name>facilities</name>
              <healthcheckUrl>http://localhost:8085/actuator/health</healthcheckUrl>
              <skip>${sentinel.skipLaunch}</skip>
              <waitAfterLaunch>60</waitAfterLaunch>
              <!--
              <processLogFile>${project.build.directory}/facilities.log</processLogFile>
              -->
              <arguments>
                <argument>java</argument>
                <argument>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5085</argument>
                <argument>-cp</argument>
                <argument>facilities.jar${path.separator}h2.jar${path.separator}facilities-local-db-tests.jar</argument>
                <argument>-Dlogging.level.root=INFO</argument>
                <argument>-Dloader=gov.va.api.lighthouse.facilities.Application</argument>
                <argument>-Daccess-to-care.url=http://localhost:8666</argument>
                <argument>-Daccess-to-pwt.url=http://localhost:8666</argument>
                <argument>-Dbing.url=http://localhost:8666</argument>
                <argument>-Dinternal.client-key=axolotl</argument>
                <argument>-Dcemeteries.url=http://localhost:8666</argument>
                <argument>-Dspring.datasource.driver-class-name=org.h2.Driver</argument>
                <argument>-Dspring.datasource.password=sa</argument>
                <argument>-Dspring.datasource.url=jdbc:h2:mem:facilities</argument>
                <argument>-Dspring.datasource.username=sa</argument>
                <argument>-Dspring.fc-datasource.driver-class-name=org.h2.Driver</argument>
                <argument>-Dspring.fc-datasource.password=sa</argument>
                <argument>-Dspring.fc-datasource.url=jdbc:h2:${project.basedir}/../facilities-local-db/target/mock-cdw</argument>
                <argument>-Dspring.fc-datasource.username=sa</argument>
                <argument>-Dspring.jpa.generate-ddl=false</argument>
                <argument>-Dspring.jpa.hibernate.ddl-auto=none</argument>
                <argument>-Dspring.jpa.properties.hibernate.globally_quoted_identifiers=false</argument>
                <argument>-Dspring.config.additional-location=classpath:/application.properties,optional:file:${project.basedir}/config/secrets.properties</argument>
                <argument>org.springframework.boot.loader.PropertiesLauncher</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>stop-all</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop-all</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>pssg-request-bot</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>pssg-request-bot</id>
                <phase>test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>gov.va.api.lighthouse.facilities.tests.PssgRequestBot</mainClass>
                  <classpathScope>test</classpathScope>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${docker-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>deploy-test</id>
                <configuration>
                  <images>
                    <image>
                      <name>${docker.organization}/${docker.imageName}</name>
                      <build>
                        <dockerFile>Dockerfile</dockerFile>
                        <tags>
                          <tag>${project.version}</tag>
                          <tag>${docker.tag}</tag>
                        </tags>
                      </build>
                    </image>
                  </images>
                </configuration>
                <phase>deploy</phase>
                <goals>
                  <goal>push</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
